AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Serverless app to convert text to speech.
Parameters:
  TableName:
    Type: String
    Default: say-it-messages
  BucketName:
    Type: String
    Default: say-it-messages
  DaysToExpire:
    Type: Number
    Default: 1

Globals:
  Function:
    Timeout: 3
    Environment:
      Variables:
        TABLE_NAME: !Ref TableName
        BUCKET_NAME: !Ref BucketName
        DAYS_TO_EXPIRE: !Ref DaysToExpire

Resources:

  NewMessageExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: new-message-lambda-execution
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal: {Service: [lambda.amazonaws.com]}
          Action: ['sts:AssumeRole']
      ManagedPolicyArns:
      - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Policies:
      - PolicyName: NewPostLambdaPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*'
            - Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource:
                - !GetAtt MessagesTable.Arn

  ConvertFunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: convert-lambda-execution
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal: {Service: [lambda.amazonaws.com]}
          Action: ['sts:AssumeRole']
      ManagedPolicyArns:
      - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Policies:
      - PolicyName: ConvertLambdaPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*'
            - Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:Query
              Resource:
                - !GetAtt MessagesTable.Arn
            - Effect: Allow
              Action:
                - dynamodb:DescribeStream
                - dynamodb:GetRecords
                - dynamodb:GetShardIterator
                - dynamodb:ListStreams
              Resource:
                - !GetAtt MessagesTable.StreamArn
            - Effect: Allow
              Action:
                - polly:StartSpeechSynthesisTask
                - polly:DescribeVoices
              Resource: [ '*' ]
            - Effect: Allow
              Action:
                - 's3:PutObject'
              Resource:
                - !Sub 'arn:aws:s3:::${BucketName}/*'

  MessagesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref TableName
      AttributeDefinitions:
        - AttributeName: Id
          AttributeType: S
      KeySchema:
        - AttributeName: Id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      TimeToLiveSpecification:
        Enabled: true
        AttributeName: Expiration
  
  MessagesBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref BucketName
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: !Ref DaysToExpire
            Status: Enabled

  NewMessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: app/
      FunctionName: new-message
      Handler: new_message.handler
      Runtime: python3.6
      Role: !GetAtt NewMessageExecutionRole.Arn
      Events:
        NewMessage:
          Type: Api 
          Properties:
              Path: /new_message
              Method: post
  
  ConvertToAudioFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: app/
      FunctionName: convert-to-audio
      Handler: convert_to_audio.handler
      Runtime: python3.6
      Role: !GetAtt ConvertFunctionExecutionRole.Arn
      Events:
        DDBStream:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt MessagesTable.StreamArn
            StartingPosition: LATEST
            BatchSize: 100

Outputs:

    NewPostApi:
      Description: 'New Post API'
      Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/'

    NewMessageFunction:
      Description: 'New Message Lambda Function ARN'
      Value: !GetAtt NewMessageFunction.Arn
