AWSTemplateFormatVersion: '2010-09-09'
Description: 'Serverless app to convert text to speech.

  '
Globals:
  Function:
    Environment:
      Variables:
        BUCKET_NAME:
          Ref: BucketName
        DAYS_TO_EXPIRE:
          Ref: DaysToExpire
        TABLE_NAME:
          Ref: TableName
    Timeout: 3
Outputs:
  NewMessageFunction:
    Description: New Message Lambda Function ARN
    Value:
      Fn::GetAtt:
      - NewMessageFunction
      - Arn
  NewPostApi:
    Description: New Post API
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/
Parameters:
  BucketName:
    Default: say-it-messages
    Type: String
  DaysToExpire:
    Default: 1
    Type: Number
  TableName:
    Default: say-it-messages
    Type: String
Resources:
  ConvertFunctionExecutionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - logs:CreateLogGroup
            Effect: Allow
            Resource:
              Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
          - Action:
            - dynamodb:PutItem
            - dynamodb:Query
            Effect: Allow
            Resource:
            - Fn::GetAtt:
              - MessagesTable
              - Arn
          - Action:
            - dynamodb:DescribeStream
            - dynamodb:GetRecords
            - dynamodb:GetShardIterator
            - dynamodb:ListStreams
            Effect: Allow
            Resource:
            - Fn::GetAtt:
              - MessagesTable
              - StreamArn
          - Action:
            - polly:StartSpeechSynthesisTask
            - polly:DescribeVoices
            Effect: Allow
            Resource:
            - '*'
          - Action:
            - s3:PutObject
            Effect: Allow
            Resource:
            - Fn::Sub: arn:aws:s3:::${BucketName}/*
          Version: '2012-10-17'
        PolicyName: ConvertLambdaPolicy
      RoleName: convert-lambda-execution
    Type: AWS::IAM::Role
  ConvertToAudioFunction:
    Properties:
      CodeUri: s3://say-it-build/b81caea2b5442a153169a675a3196083
      Events:
        DDBStream:
          Properties:
            BatchSize: 100
            StartingPosition: LATEST
            Stream:
              Fn::GetAtt:
              - MessagesTable
              - StreamArn
          Type: DynamoDB
      FunctionName: convert-to-audio
      Handler: convert_to_audio.handler
      Role:
        Fn::GetAtt:
        - ConvertFunctionExecutionRole
        - Arn
      Runtime: python3.6
    Type: AWS::Serverless::Function
  MessagesBucket:
    Properties:
      BucketName:
        Ref: BucketName
      LifecycleConfiguration:
        Rules:
        - ExpirationInDays:
            Ref: DaysToExpire
          Status: Enabled
    Type: AWS::S3::Bucket
  MessagesTable:
    Properties:
      AttributeDefinitions:
      - AttributeName: Id
        AttributeType: S
      KeySchema:
      - AttributeName: Id
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      TableName:
        Ref: TableName
      TimeToLiveSpecification:
        AttributeName: Expiration
        Enabled: true
    Type: AWS::DynamoDB::Table
  NewMessageExecutionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - logs:CreateLogGroup
            Effect: Allow
            Resource:
              Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
          - Action:
            - dynamodb:PutItem
            Effect: Allow
            Resource:
            - Fn::GetAtt:
              - MessagesTable
              - Arn
          Version: '2012-10-17'
        PolicyName: NewPostLambdaPolicy
      RoleName: new-message-lambda-execution
    Type: AWS::IAM::Role
  NewMessageFunction:
    Properties:
      CodeUri: s3://say-it-build/b81caea2b5442a153169a675a3196083
      Events:
        NewMessage:
          Properties:
            Method: post
            Path: /new_message
          Type: Api
      FunctionName: new-message
      Handler: new_message.handler
      Role:
        Fn::GetAtt:
        - NewMessageExecutionRole
        - Arn
      Runtime: python3.6
    Type: AWS::Serverless::Function
Transform: AWS::Serverless-2016-10-31
